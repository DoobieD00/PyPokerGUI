game-2.yaml
health check succeeded for script of [ submission/dudu.py ]
health check succeeded for script of [ submission/gto3.py ]
health check succeeded for script of [ submission/gtoWes.py ]
health check succeeded for script of [ submission/pray.py ]
health check succeeded for script of [ submission/waterbottle.py ]
health check succeeded for script of [ submission/TeamMasBot.py ]
health check succeeded for script of [ submission/SuperMegaPokertronEX.py ]
2025-05-07 00:48:40.887698: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-05-07 00:48:49.702816: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-05-07 00:49:06.709535: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: SSE3 SSE4.1 SSE4.2 AVX AVX2 AVX_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
‚úÖ Loaded pretrained weights successfully.
health check succeeded for script of [ submission/PokerAi/mybot.py ]
‚úÖ Loaded pretrained weights successfully.
AI Agent endpoint configured as: http://85.93.9.187:8080/process
health check succeeded for script of [ submission/jasper/JasperBot.py ]
AI Agent endpoint configured as: http://85.93.9.187:8080/process
[Error] uuid not set before receive_game_start_message.
--- New Game Starting ---
Number of players: 9
Max rounds: 10
Initial small blind: 5
Initial ante: 0
----------------------------------------
[Round 1] Hole cards: ['HJ', 'H4']

--- Starting Round 1 ---
JasperBot receives hole cards: 8c, 7h
Initial Stacks:
  DuduBot: 100 (participating)
  gto3: 95 (participating)
  gtowes: 90 (participating)
  PrayToGod: 100 (participating)
  WaterBottle: 100 (participating)
  TeamMasBot: 100 (participating)
  SMPEX: 100 (participating)
  Poker_AI: 100 (participating)
  JasperBot: 100 (participating)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: PrayToGod
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["C7", "C6"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 100, "1": 95, "2": 90, "3": 100, "4": 100, "5": 100, "6": 100, "7": 100, "8": 100}, "pot_size": 15, "betting_history": [{"street": "preflop", "actor": "1", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "2", "action": "BIGBLIND", "amount": 10}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '86444cc793fe4591940bfcb7ff5c3278', 'object': 'chat.completion', 'created': 1746542949, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 666, 'total_tokens': 673, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD"}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD'}
  ACTION: PrayToGod folds.
  ACTION: WaterBottle folds.
  ACTION: TeamMasBot folds.
  ACTION: SMPEX calls 10.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 147ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 160ms/step
  ACTION: Poker_AI raises to 26 (pays 26).

<HOLE_CARDS> ['C8', 'H7'] </HOLE_CARDS>
<COMMUNITY_CARDS> [] </COMMUNITY_CARDS>
<POT> 51 </POT>
<POSITION> Middle </POSITION>
<STACK> 100 </STACK>
<HAND> ['C8', 'H7'] </HAND>

<HISTORICAL_HAND_DATA>
Current street: preflop
Current hole cards: 8c, 7h
<TABLE_INFO>
  Player: DuduBot, Position: Button, Stack: 100, State: participating
  Player: gto3, Position: Small Blind, Stack: 95, State: participating
  Player: gtowes, Position: Big Blind, Stack: 90, State: participating
  Player: PrayToGod, Position: Early, Stack: 100, State: folded
  Player: WaterBottle, Position: Early, Stack: 100, State: folded
  Player: TeamMasBot, Position: Early, Stack: 100, State: folded
  Player: SMPEX, Position: Middle, Stack: 90, State: participating
  Player: Poker_AI, Position: Middle, Stack: 74, State: participating
  Player: JasperBot, Position: Middle, Stack: 100, State: participating
</TABLE_INFO>
<STREET_ACTIONS>
  gto3: SMALLBLIND (5)
  gtowes: BIGBLIND (10)
  PrayToGod: FOLD
  WaterBottle: FOLD
  TeamMasBot: FOLD
  SMPEX: CALL (10)
  Poker_AI: RAISE (26)
</STREET_ACTIONS>
</HISTORICAL_HAND_DATA>
<CURRENT_HAND_HISTORY>
Round 1 (IN PROGRESS)
Hole cards: 8c, 7h
Opponent actions this round:
  PrayToGod on preflop: FOLD
  WaterBottle on preflop: FOLD
  TeamMasBot on preflop: FOLD
  SMPEX on preflop: CALL (10)
  Poker_AI on preflop: RAISE (26)
</CURRENT_HAND_HISTORY>
<PREVIOUS_ROUNDS_HISTORY>
No previous rounds recorded yet.
</PREVIOUS_ROUNDS_HISTORY>

<OPPONENTS_JSON>
{
  "opponents": [
    {
      "id": "0",
      "position": "Small Blind",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 0,
        "last_10_hands": []
      }
    },
    {
      "id": "1",
      "position": "Big Blind",
      "stack": 95,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 0,
        "last_10_hands": []
      }
    },
    {
      "id": "2",
      "position": "Early",
      "stack": 90,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 0,
        "last_10_hands": []
      }
    },
    {
      "id": "3",
      "position": "Early",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "4",
      "position": "Early",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "5",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "6",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "call",
            "amount": 10,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "7",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "raise",
            "amount": 26,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    }
  ]
}
</OPPONENTS_JSON>

<AVAILABLE_ACTIONS>
1: Fold
2: Call (amount: 26)
3: Raise (min: 42, max: 100)
</AVAILABLE_ACTIONS>

MAKE YOUR OWN PREDICTION based on the history above.

Waiting for response from AI Agent...
AI Agent response: {'action': 'call'}
Executing CALL action from AI Agent (amount: 26)
  ACTION: JasperBot calls 26.
[Decide R1] Street: preflop, Hole: ['HJ', 'H4'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  ACTION: gto3 folds.
  0%|          | 0/1000 [00:00<?, ?it/s] 24%|##4       | 244/1000 [00:00<00:00, 1798.62it/s] 70%|#######   | 705/1000 [00:00<00:00, 3234.84it/s]100%|##########| 1000/1000 [00:00<00:00, 3315.12it/s]
[self.search_stack] => found name : gtowes = gtowes
  ACTION: gtowes raises to 90 (pays 90).
  ACTION: SMPEX calls 90.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 25ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 40ms/step
  ACTION: Poker_AI raises to 0 (pays 0).

<HOLE_CARDS> ['C8', 'H7'] </HOLE_CARDS>
<COMMUNITY_CARDS> [] </COMMUNITY_CARDS>
<POT> 237 </POT>
<POSITION> Middle </POSITION>
<STACK> 74 </STACK>
<HAND> ['C8', 'H7'] </HAND>

<HISTORICAL_HAND_DATA>
Current street: preflop
Current hole cards: 8c, 7h
<TABLE_INFO>
  Player: DuduBot, Position: Button, Stack: 100, State: folded
  Player: gto3, Position: Small Blind, Stack: 95, State: folded
  Player: gtowes, Position: Big Blind, Stack: 10, State: participating
  Player: PrayToGod, Position: Early, Stack: 100, State: folded
  Player: WaterBottle, Position: Early, Stack: 100, State: folded
  Player: TeamMasBot, Position: Early, Stack: 100, State: folded
  Player: SMPEX, Position: Middle, Stack: 10, State: participating
  Player: Poker_AI, Position: Middle, Stack: 74, State: folded
  Player: JasperBot, Position: Middle, Stack: 74, State: participating
</TABLE_INFO>
<STREET_ACTIONS>
  gto3: SMALLBLIND (5)
  gtowes: BIGBLIND (10)
  PrayToGod: FOLD
  WaterBottle: FOLD
  TeamMasBot: FOLD
  SMPEX: CALL (10)
  Poker_AI: RAISE (26)
  JasperBot: CALL (26)
  DuduBot: FOLD
  gto3: FOLD
  gtowes: RAISE (90)
  SMPEX: CALL (90)
  Poker_AI: FOLD
</STREET_ACTIONS>
</HISTORICAL_HAND_DATA>
<CURRENT_HAND_HISTORY>
Round 1 (IN PROGRESS)
Hole cards: 8c, 7h
My actions this round:
  preflop: CALL (26)
Opponent actions this round:
  PrayToGod on preflop: FOLD
  WaterBottle on preflop: FOLD
  TeamMasBot on preflop: FOLD
  SMPEX on preflop: CALL (10)
  Poker_AI on preflop: RAISE (26)
  DuduBot on preflop: FOLD
  gto3 on preflop: FOLD
  gtowes on preflop: RAISE (90)
  SMPEX on preflop: CALL (90)
  Poker_AI on preflop: RAISE
</CURRENT_HAND_HISTORY>
<PREVIOUS_ROUNDS_HISTORY>
No previous rounds recorded yet.
</PREVIOUS_ROUNDS_HISTORY>

<OPPONENTS_JSON>
{
  "opponents": [
    {
      "id": "0",
      "position": "Small Blind",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Small Blind",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "1",
      "position": "Big Blind",
      "stack": 95,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Big Blind",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "2",
      "position": "Early",
      "stack": 90,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "raise",
            "amount": 90,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "3",
      "position": "Early",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "4",
      "position": "Early",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "5",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "6",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 2,
        "last_10_hands": [
          {
            "action": "call",
            "amount": 10,
            "position": "Middle",
            "street": "preflop"
          },
          {
            "action": "call",
            "amount": 90,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "7",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 2,
        "last_10_hands": [
          {
            "action": "raise",
            "amount": 26,
            "position": "Middle",
            "street": "preflop"
          },
          {
            "action": "raise",
            "amount": null,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    }
  ]
}
</OPPONENTS_JSON>

<AVAILABLE_ACTIONS>
1: Fold
2: Call (amount: 90)
</AVAILABLE_ACTIONS>

MAKE YOUR OWN PREDICTION based on the history above.

Waiting for response from AI Agent...
AI Agent response: {'action': 'call'}
Executing CALL action from AI Agent (amount: 90)
  ACTION: JasperBot calls 90.

--- Street Start: FLOP ---
Community Cards: [6d, Td, Ac]
Pot: 301
Next to act: gtowes
  0%|          | 0/1000 [00:00<?, ?it/s] 54%|#####4    | 540/1000 [00:00<00:00, 5370.86it/s]100%|##########| 1000/1000 [00:00<00:00, 3743.64it/s]
[self.search_stack] => found name : gtowes = gtowes
  ACTION: gtowes raises to 10 (all-in) (pays 10).
  ACTION: SMPEX calls 10.

<HOLE_CARDS> ['C8', 'H7'] </HOLE_CARDS>
<COMMUNITY_CARDS> ['D6', 'DT', 'CA'] </COMMUNITY_CARDS>
<POT> 321 </POT>
<POSITION> Middle </POSITION>
<STACK> 10 </STACK>
<HAND> ['C8', 'H7'] </HAND>

<HISTORICAL_HAND_DATA>
Current street: flop
Current hole cards: 8c, 7h
Current community cards: 6d, Td, Ac
<TABLE_INFO>
  Player: DuduBot, Position: Button, Stack: 100, State: folded
  Player: gto3, Position: Small Blind, Stack: 95, State: folded
  Player: gtowes, Position: Big Blind, Stack: 0, State: allin
  Player: PrayToGod, Position: Early, Stack: 100, State: folded
  Player: WaterBottle, Position: Early, Stack: 100, State: folded
  Player: TeamMasBot, Position: Early, Stack: 100, State: folded
  Player: SMPEX, Position: Middle, Stack: 0, State: allin
  Player: Poker_AI, Position: Middle, Stack: 74, State: folded
  Player: JasperBot, Position: Middle, Stack: 10, State: participating
</TABLE_INFO>
<STREET_ACTIONS>
  gtowes: RAISE (10)
  SMPEX: CALL (10)
</STREET_ACTIONS>
</HISTORICAL_HAND_DATA>
<CURRENT_HAND_HISTORY>
Round 1 (IN PROGRESS)
Hole cards: 8c, 7h
Community cards: 6d, Td, Ac
My actions this round:
  preflop: CALL (26)
  preflop: CALL (90)
Opponent actions this round:
  PrayToGod on preflop: FOLD
  WaterBottle on preflop: FOLD
  TeamMasBot on preflop: FOLD
  SMPEX on preflop: CALL (10)
  Poker_AI on preflop: RAISE (26)
  DuduBot on preflop: FOLD
  gto3 on preflop: FOLD
  gtowes on preflop: RAISE (90)
  SMPEX on preflop: CALL (90)
  Poker_AI on preflop: RAISE
  gtowes on flop: RAISE (10)
  SMPEX on flop: CALL (10)
</CURRENT_HAND_HISTORY>
<PREVIOUS_ROUNDS_HISTORY>
No previous rounds recorded yet.
</PREVIOUS_ROUNDS_HISTORY>

<OPPONENTS_JSON>
{
  "opponents": [
    {
      "id": "0",
      "position": "Small Blind",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Small Blind",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "1",
      "position": "Big Blind",
      "stack": 95,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Big Blind",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "2",
      "position": "Early",
      "stack": 90,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 2,
        "last_10_hands": [
          {
            "action": "raise",
            "amount": 90,
            "position": "Early",
            "street": "preflop"
          },
          {
            "action": "raise",
            "amount": 10,
            "position": "Early",
            "street": "flop"
          }
        ]
      }
    },
    {
      "id": "3",
      "position": "Early",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "4",
      "position": "Early",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Early",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "5",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 1,
        "last_10_hands": [
          {
            "action": "fold",
            "amount": null,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    },
    {
      "id": "6",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 3,
        "last_10_hands": [
          {
            "action": "call",
            "amount": 10,
            "position": "Middle",
            "street": "preflop"
          },
          {
            "action": "call",
            "amount": 90,
            "position": "Middle",
            "street": "preflop"
          },
          {
            "action": "call",
            "amount": 10,
            "position": "Middle",
            "street": "flop"
          }
        ]
      }
    },
    {
      "id": "7",
      "position": "Middle",
      "stack": 100,
      "history": {
        "fold_to_5bb_shove": 0.0,
        "call_range_width": 0.0,
        "short_stack_adjustment": 1.0,
        "observations": 2,
        "last_10_hands": [
          {
            "action": "raise",
            "amount": 26,
            "position": "Middle",
            "street": "preflop"
          },
          {
            "action": "raise",
            "amount": null,
            "position": "Middle",
            "street": "preflop"
          }
        ]
      }
    }
  ]
}
</OPPONENTS_JSON>

<AVAILABLE_ACTIONS>
1: Fold
2: Call (amount: 10)
</AVAILABLE_ACTIONS>

MAKE YOUR OWN PREDICTION based on the history above.

Waiting for response from AI Agent...
AI Agent response: {'action': 'call'}
Executing CALL action from AI Agent (amount: 10)
  ACTION: JasperBot calls 10.

--- Street Start: TURN ---
Community Cards: [6d, Td, Ac, Kh]
Pot: 331
Waiting for next action...

--- Street Start: RIVER ---
Community Cards: [6d, Td, Ac, Kh, As]
Pot: 331
Waiting for next action...

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 15ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 27ms/step

--- Round End ---
Final Pot: 331
gtowes wins the pot.
  Final stack: 331

--- Showdown ---
Board: [6d, Td, Ac, Kh, As]
  gtowes shows Qs, Qh => TWO PAIR
  SMPEX shows 6s, 7d => TWO PAIR
  JasperBot shows 8c, 7h => PAIR

Final Stacks for Round:
  DuduBot: 100 (folded)
  gto3: 95 (folded)
  gtowes: 331 (allin)
  PrayToGod: 100 (folded)
  WaterBottle: 100 (folded)
  TeamMasBot: 100 (folded)
  SMPEX: 0 (allin)
  Poker_AI: 74 (folded)
  JasperBot: 0 (allin)
----------------------------------------
[Round 2] Hole cards: ['H5', 'ST']

--- Starting Round 2 ---
JasperBot receives hole cards: Jh, 6d
Initial Stacks:
  DuduBot: 100 (participating)
  gto3: 95 (participating)
  gtowes: 326 (participating)
  PrayToGod: 90 (participating)
  WaterBottle: 100 (participating)
  TeamMasBot: 100 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 74 (participating)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: WaterBottle
  ACTION: WaterBottle calls 10.
  ACTION: TeamMasBot folds.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 28ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 41ms/step
  ACTION: Poker_AI raises to 23 (pays 23).
[Decide R2] Street: preflop, Hole: ['H5', 'ST'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  ACTION: gto3 folds.
  0%|          | 0/1000 [00:00<?, ?it/s] 40%|###9      | 399/1000 [00:00<00:00, 3975.63it/s] 82%|########2 | 822/1000 [00:00<00:00, 4112.25it/s]100%|##########| 1000/1000 [00:00<00:00, 4107.88it/s]
  ACTION: gtowes folds.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["H9", "C7"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 100, "1": 95, "2": 326, "3": 90, "4": 90, "5": 100, "6": 0, "7": 51, "8": 0}, "pot_size": 48, "betting_history": [{"street": "preflop", "actor": "2", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "3", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "4", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "5", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "7", "action": "RAISE", "amount": 23}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '8ed66d50eed340428186658e63c59810', 'object': 'chat.completion', 'created': 1746543123, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD","amount":0}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 828, 'total_tokens': 839, 'completion_tokens': 11, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD","amount":0}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD', 'amount': 0}
  ACTION: PrayToGod folds.
  ACTION: WaterBottle calls 23.

--- Street Start: FLOP ---
Community Cards: [Ks, Kh, 3s]
Pot: 61
Next to act: WaterBottle
  ACTION: WaterBottle checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 18ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 31ms/step
  ACTION: Poker_AI raises to 20 (pays 20).
  ACTION: WaterBottle calls 20.

--- Street Start: TURN ---
Community Cards: [Ks, Kh, 3s, 3c]
Pot: 101
Next to act: WaterBottle
  ACTION: WaterBottle checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 17ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 31ms/step
  ACTION: Poker_AI raises to 10 (pays 10).
  ACTION: WaterBottle calls 10.

--- Street Start: RIVER ---
Community Cards: [Ks, Kh, 3s, 3c, 4s]
Pot: 121
Next to act: WaterBottle
  ACTION: WaterBottle checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 18ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 31ms/step
  ACTION: Poker_AI checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 16ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 28ms/step

--- Round End ---
Final Pot: 121
Poker_AI wins the pot.
  Final stack: 142

--- Showdown ---
Board: [Ks, Kh, 3s, 3c, 4s]
  WaterBottle shows 4d, Qc => TWO PAIR
  Poker_AI shows Qs, 5s => FLUSH

Final Stacks for Round:
  DuduBot: 100 (folded)
  gto3: 95 (folded)
  gtowes: 326 (folded)
  PrayToGod: 90 (folded)
  WaterBottle: 47 (participating)
  TeamMasBot: 100 (folded)
  SMPEX: 0 (folded)
  Poker_AI: 142 (participating)
  JasperBot: 0 (folded)
----------------------------------------
[Round 3] Hole cards: ['C4', 'H5']

--- Starting Round 3 ---
JasperBot receives hole cards: Jc, 9d
Initial Stacks:
  DuduBot: 100 (participating)
  gto3: 95 (participating)
  gtowes: 326 (participating)
  PrayToGod: 85 (participating)
  WaterBottle: 37 (participating)
  TeamMasBot: 100 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 142 (participating)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: TeamMasBot
  ACTION: TeamMasBot folds.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 18ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 32ms/step
  ACTION: Poker_AI raises to 32 (pays 32).
[Decide R3] Street: preflop, Hole: ['C4', 'H5'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  ACTION: gto3 calls 32.
  0%|          | 0/1000 [00:00<?, ?it/s]  8%|7         | 75/1000 [00:00<00:01, 632.65it/s] 40%|####      | 400/1000 [00:00<00:00, 2056.26it/s] 72%|#######1  | 716/1000 [00:00<00:00, 2530.47it/s]100%|##########| 1000/1000 [00:00<00:00, 2467.12it/s]
  ACTION: gtowes folds.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["H4", "ST"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 100, "1": 63, "2": 326, "3": 85, "4": 37, "5": 100, "6": 0, "7": 110, "8": 0}, "pot_size": 79, "betting_history": [{"street": "preflop", "actor": "3", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "4", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "5", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "7", "action": "RAISE", "amount": 32}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "CALL", "amount": 32}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '46320787844e499aa0f67983e0e0fdb5', 'object': 'chat.completion', 'created': 1746543152, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 800, 'total_tokens': 807, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD"}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD'}
  ACTION: PrayToGod folds.
  ACTION: WaterBottle calls 32.

--- Street Start: FLOP ---
Community Cards: [Ks, 4d, 5s]
Pot: 101
Next to act: WaterBottle
  ACTION: WaterBottle checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 19ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 32ms/step
  ACTION: Poker_AI checks.
  ACTION: gto3 checks.

--- Street Start: TURN ---
Community Cards: [Ks, 4d, 5s, 7d]
Pot: 101
Next to act: WaterBottle
  ACTION: WaterBottle checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 19ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 32ms/step
  ACTION: Poker_AI raises to 20 (pays 20).
  ACTION: gto3 calls 20.
  ACTION: WaterBottle calls 20.

--- Street Start: RIVER ---
Community Cards: [Ks, 4d, 5s, 7d, 7s]
Pot: 156
Next to act: Poker_AI

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 18ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 30ms/step
  ACTION: Poker_AI raises to 10 (pays 10).
  ACTION: gto3 calls 10.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 16ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 29ms/step

--- Round End ---
Final Pot: 176
gto3 wins the pot.
  Final stack: 209

--- Showdown ---
Board: [Ks, 4d, 5s, 7d, 7s]
  gto3 shows Jh, 5c => TWO PAIR
  WaterBottle shows Th, 3h => PAIR
  Poker_AI shows 6d, Ah => PAIR

Final Stacks for Round:
  DuduBot: 100 (folded)
  gto3: 209 (participating)
  gtowes: 326 (folded)
  PrayToGod: 85 (folded)
  WaterBottle: 0 (allin)
  TeamMasBot: 100 (folded)
  SMPEX: 0 (folded)
  Poker_AI: 80 (participating)
  JasperBot: 0 (folded)
----------------------------------------
[Round 4] Hole cards: ['SK', 'H9']

--- Starting Round 4 ---
JasperBot receives hole cards: 5s, 8c
Initial Stacks:
  DuduBot: 100 (participating)
  gto3: 209 (participating)
  gtowes: 326 (participating)
  PrayToGod: 85 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 95 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 70 (participating)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: DuduBot
[Decide R4] Street: preflop, Hole: ['SK', 'H9'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  ACTION: gto3 calls 10.
  0%|          | 0/1000 [00:00<?, ?it/s] 10%|#         | 102/1000 [00:00<00:01, 827.83it/s] 46%|####5     | 455/1000 [00:00<00:00, 2270.27it/s] 80%|#######9  | 799/1000 [00:00<00:00, 2770.74it/s]100%|##########| 1000/1000 [00:00<00:00, 2618.00it/s]
[self.search_stack] => found name : gtowes = gtowes
  ACTION: gtowes raises to 326 (all-in) (pays 326).
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["HQ", "S6"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 100, "1": 199, "2": 0, "3": 85, "4": 0, "5": 95, "6": 0, "7": 70, "8": 0}, "pot_size": 351, "betting_history": [{"street": "preflop", "actor": "5", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "7", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "2", "action": "RAISE", "amount": 326}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': 'bd5da5eb08ed4b41ba20fccb8c16be79', 'object': 'chat.completion', 'created': 1746543177, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 746, 'total_tokens': 753, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD"}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD'}
  ACTION: PrayToGod folds.
  ACTION: TeamMasBot folds.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 17ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 30ms/step
  ACTION: Poker_AI calls 326.
  ACTION: gto3 folds.

--- Street Start: FLOP ---
Community Cards: [Kh, Td, 3s]
Pot: 421
Waiting for next action...

--- Street Start: TURN ---
Community Cards: [Kh, Td, 3s, Jc]
Pot: 421
Waiting for next action...

--- Street Start: RIVER ---
Community Cards: [Kh, Td, 3s, Jc, 5d]
Pot: 421
Waiting for next action...

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 15ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 27ms/step

--- Round End ---
Final Pot: 421
gtowes wins the pot.
  Final stack: 421

--- Showdown ---
Board: [Kh, Td, 3s, Jc, 5d]
  gtowes shows Ad, Qc => STRAIGHT
  Poker_AI shows 3c, Js => TWO PAIR

Final Stacks for Round:
  DuduBot: 100 (folded)
  gto3: 199 (folded)
  gtowes: 421 (allin)
  PrayToGod: 85 (folded)
  WaterBottle: 0 (folded)
  TeamMasBot: 95 (folded)
  SMPEX: 0 (folded)
  Poker_AI: 0 (allin)
  JasperBot: 0 (folded)
----------------------------------------
[Round 5] Hole cards: ['D5', 'H3']

--- Starting Round 5 ---
JasperBot receives hole cards: Qs, 6d
Initial Stacks:
  DuduBot: 95 (participating)
  gto3: 189 (participating)
  gtowes: 421 (participating)
  PrayToGod: 85 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 95 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: gtowes
  0%|          | 0/1000 [00:00<?, ?it/s] 14%|#3        | 136/1000 [00:00<00:00, 1015.47it/s] 49%|####8     | 486/1000 [00:00<00:00, 2288.92it/s] 83%|########3 | 831/1000 [00:00<00:00, 2776.19it/s]100%|##########| 1000/1000 [00:00<00:00, 2605.31it/s]
  ACTION: gtowes folds.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["SA", "DT"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 95, "1": 189, "2": 421, "3": 85, "4": 0, "5": 95, "6": 0, "7": 0, "8": 0}, "pot_size": 15, "betting_history": [{"street": "preflop", "actor": "0", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "1", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': 'f30942d8d1d741a799bab83b1eef7677', 'object': 'chat.completion', 'created': 1746543193, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '```json', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': '\n'}], 'usage': {'prompt_tokens': 691, 'total_tokens': 694, 'completion_tokens': 3, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: ```json
ERROR ‚ñ∂ API failure, using fallback: Invalid API output, no JSON found: ```json

Error in PrayToGod: substring not found: Default to fold

  ACTION: PrayToGod folds.
  ACTION: TeamMasBot folds.
[Decide R5] Street: preflop, Hole: ['D5', 'H3'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 15ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 27ms/step

--- Round End ---
Final Pot: 15
gto3 wins the pot.
  Final stack: 204

Final Stacks for Round:
  DuduBot: 95 (folded)
  gto3: 204 (participating)
  gtowes: 421 (folded)
  PrayToGod: 85 (folded)
  WaterBottle: 0 (folded)
  TeamMasBot: 95 (folded)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------
[Round 6] Hole cards: ['S2', 'S6']

--- Starting Round 6 ---
JasperBot receives hole cards: 9d, Qs
Initial Stacks:
  DuduBot: 95 (participating)
  gto3: 199 (participating)
  gtowes: 411 (participating)
  PrayToGod: 85 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 95 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: PrayToGod
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["S3", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 95, "1": 199, "2": 411, "3": 85, "4": 0, "5": 95, "6": 0, "7": 0, "8": 0}, "pot_size": 15, "betting_history": [{"street": "preflop", "actor": "1", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "2", "action": "BIGBLIND", "amount": 10}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '495c8d953c78491dac1a806a30c74f4f', 'object': 'chat.completion', 'created': 1746543206, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"CALL"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 665, 'total_tokens': 672, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"CALL"}
DEBUG ‚ñ∂ parsed decision: {'action': 'CALL'}
  ACTION: PrayToGod calls 10.
  ACTION: TeamMasBot calls 10.
[Decide R6] Street: preflop, Hole: ['S2', 'S6'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  ACTION: gto3 calls 10.
  0%|          | 0/1000 [00:00<?, ?it/s] 22%|##2       | 223/1000 [00:00<00:00, 1511.39it/s] 65%|######5   | 650/1000 [00:00<00:00, 2858.05it/s]100%|##########| 1000/1000 [00:00<00:00, 3011.51it/s]
  ACTION: gtowes folds.

--- Street Start: FLOP ---
Community Cards: [Ks, Tc, Jh]
Pot: 40
Next to act: gto3
  ACTION: gto3 checks.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["S3", "HA"], "community_cards": ["SK", "CT", "HJ"], "position": "flop", "stack_sizes": {"0": 95, "1": 194, "2": 411, "3": 75, "4": 0, "5": 85, "6": 0, "7": 0, "8": 0}, "pot_size": 40, "betting_history": [{"street": "preflop", "actor": "1", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "2", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "3", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "5", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}, {"street": "flop", "actor": "1", "action": "CALL", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': 'eee501def21e493b8abd43b8559f0e8e', 'object': 'chat.completion', 'created': 1746543217, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"CALL"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 833, 'total_tokens': 840, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"CALL"}
DEBUG ‚ñ∂ parsed decision: {'action': 'CALL'}
  ACTION: PrayToGod checks.
  ACTION: TeamMasBot checks.

--- Street Start: TURN ---
Community Cards: [Ks, Tc, Jh, 8s]
Pot: 40
Next to act: gto3
  ACTION: gto3 checks.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["S3", "HA"], "community_cards": ["SK", "CT", "HJ", "S8"], "position": "turn", "stack_sizes": {"0": 95, "1": 194, "2": 411, "3": 75, "4": 0, "5": 85, "6": 0, "7": 0, "8": 0}, "pot_size": 40, "betting_history": [{"street": "preflop", "actor": "1", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "2", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "3", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "5", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}, {"street": "flop", "actor": "1", "action": "CALL", "amount": 0}, {"street": "flop", "actor": "3", "action": "CALL", "amount": 0}, {"street": "flop", "actor": "5", "action": "CALL", "amount": 0}, {"street": "turn", "actor": "1", "action": "CALL", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': 'a74cdee0560843d9aaf36a7ee0ba9b82', 'object': 'chat.completion', 'created': 1746543223, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"CALL"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 913, 'total_tokens': 920, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"CALL"}
DEBUG ‚ñ∂ parsed decision: {'action': 'CALL'}
  ACTION: PrayToGod checks.
  ACTION: TeamMasBot checks.

--- Street Start: RIVER ---
Community Cards: [Ks, Tc, Jh, 8s, 8h]
Pot: 40
Next to act: gto3
  ACTION: gto3 checks.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["S3", "HA"], "community_cards": ["SK", "CT", "HJ", "S8", "H8"], "position": "river", "stack_sizes": {"0": 95, "1": 194, "2": 411, "3": 75, "4": 0, "5": 85, "6": 0, "7": 0, "8": 0}, "pot_size": 40, "betting_history": [{"street": "preflop", "actor": "1", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "2", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "3", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "5", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}, {"street": "flop", "actor": "1", "action": "CALL", "amount": 0}, {"street": "flop", "actor": "3", "action": "CALL", "amount": 0}, {"street": "flop", "actor": "5", "action": "CALL", "amount": 0}, {"street": "turn", "actor": "1", "action": "CALL", "amount": 0}, {"street": "turn", "actor": "3", "action": "CALL", "amount": 0}, {"street": "turn", "actor": "5", "action": "CALL", "amount": 0}, {"street": "river", "actor": "1", "action": "CALL", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '29225399936f4f098e1857cb34a5bf06', 'object': 'chat.completion', 'created': 1746543230, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"CALL"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 992, 'total_tokens': 999, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"CALL"}
DEBUG ‚ñ∂ parsed decision: {'action': 'CALL'}
  ACTION: PrayToGod checks.
  ACTION: TeamMasBot checks.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 15ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 28ms/step

--- Round End ---
Final Pot: 40
gto3 wins the pot.
  Final stack: 234

--- Showdown ---
Board: [Ks, Tc, Jh, 8s, 8h]
  gto3 shows Kh, Th => TWO PAIR
  PrayToGod shows 3s, Ah => PAIR
  TeamMasBot shows 9c, 4c => PAIR

Final Stacks for Round:
  DuduBot: 95 (folded)
  gto3: 234 (participating)
  gtowes: 411 (folded)
  PrayToGod: 75 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 85 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------
[Round 7] Hole cards: ['DT', 'C4']

--- Starting Round 7 ---
JasperBot receives hole cards: Kc, 7h
Initial Stacks:
  DuduBot: 95 (participating)
  gto3: 234 (participating)
  gtowes: 406 (participating)
  PrayToGod: 65 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 85 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: TeamMasBot
  ACTION: TeamMasBot folds.
[Decide R7] Street: preflop, Hole: ['DT', 'C4'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  ACTION: gto3 calls 10.
  0%|          | 0/1000 [00:00<?, ?it/s] 50%|#####     | 502/1000 [00:00<00:00, 4975.39it/s]100%|##########| 1000/1000 [00:00<00:00, 3408.65it/s]100%|##########| 1000/1000 [00:00<00:00, 3578.35it/s]
[self.search_stack] => found name : gtowes = gtowes
  ACTION: gtowes raises to 406 (pays 406).
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["HJ", "C2"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 95, "1": 224, "2": 5, "3": 65, "4": 0, "5": 85, "6": 0, "7": 0, "8": 0}, "pot_size": 426, "betting_history": [{"street": "preflop", "actor": "2", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "3", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "5", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "1", "action": "CALL", "amount": 10}, {"street": "preflop", "actor": "2", "action": "RAISE", "amount": 406}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '0207cc0d6dfc4c5fb980395f6ec7bf4d', 'object': 'chat.completion', 'created': 1746543244, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD"}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 773, 'total_tokens': 780, 'completion_tokens': 7, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD"}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD'}
  ACTION: PrayToGod folds.
  ACTION: gto3 calls 406.

--- Street Start: FLOP ---
Community Cards: [4s, Ad, 8d]
Pot: 650
Next to act: gtowes

--- Street Start: TURN ---
Community Cards: [4s, Ad, 8d, 7d]
Pot: 650
Next to act: gtowes

--- Street Start: RIVER ---
Community Cards: [4s, Ad, 8d, 7d, 2s]
Pot: 650
Next to act: gtowes

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 15ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 29ms/step

--- Round End ---
Final Pot: 650
gtowes wins the pot.
  Final stack: 655

--- Showdown ---
Board: [4s, Ad, 8d, 7d, 2s]
  gto3 shows Jc, 6d => HIGH CARD
  gtowes shows 8s, Qh => PAIR

Final Stacks for Round:
  DuduBot: 95 (folded)
  gto3: 0 (allin)
  gtowes: 655 (participating)
  PrayToGod: 65 (folded)
  WaterBottle: 0 (folded)
  TeamMasBot: 85 (folded)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------
[Round 8] Hole cards: ['D5', 'CT']

--- Starting Round 8 ---
JasperBot receives hole cards: Kc, Ks
Initial Stacks:
  DuduBot: 95 (participating)
  gto3: 0 (folded)
  gtowes: 655 (participating)
  PrayToGod: 60 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 75 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: DuduBot
[Decide R8] Street: preflop, Hole: ['D5', 'CT'], Community: []
=> Preflop: folding hand
  ACTION: DuduBot folds.
  0%|          | 0/1000 [00:00<?, ?it/s] 51%|#####1    | 510/1000 [00:00<00:00, 5068.08it/s]100%|##########| 1000/1000 [00:00<00:00, 5198.29it/s]
  ACTION: gtowes folds.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["DT", "C8"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 95, "1": 0, "2": 655, "3": 60, "4": 0, "5": 75, "6": 0, "7": 0, "8": 0}, "pot_size": 15, "betting_history": [{"street": "preflop", "actor": "3", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "5", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "0", "action": "FOLD", "amount": 0}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': 'fee261c3fe7d4fc48e6e2b426574f197', 'object': 'chat.completion', 'created': 1746543261, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD","amount":0}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 719, 'total_tokens': 730, 'completion_tokens': 11, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD","amount":0}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD', 'amount': 0}
  ACTION: PrayToGod folds.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 17ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 30ms/step

--- Round End ---
Final Pot: 15
TeamMasBot wins the pot.
  Final stack: 90

Final Stacks for Round:
  DuduBot: 95 (folded)
  gto3: 0 (folded)
  gtowes: 655 (folded)
  PrayToGod: 60 (folded)
  WaterBottle: 0 (folded)
  TeamMasBot: 90 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------
[Round 9] Hole cards: ['C2', 'S9']

--- Starting Round 9 ---
JasperBot receives hole cards: Kc, Qd
Initial Stacks:
  DuduBot: 85 (participating)
  gto3: 0 (folded)
  gtowes: 655 (participating)
  PrayToGod: 60 (participating)
  WaterBottle: 0 (folded)
  TeamMasBot: 85 (participating)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------

--- Street Start: PREFLOP ---
Pot: 15
Next to act: gtowes
  0%|          | 0/1000 [00:00<?, ?it/s] 39%|###9      | 393/1000 [00:00<00:00, 2264.68it/s] 81%|########1 | 811/1000 [00:00<00:00, 3122.66it/s]100%|##########| 1000/1000 [00:00<00:00, 3119.73it/s]
  ACTION: gtowes folds.
DEBUG ‚ñ∂ API payload: {'model': 'deepseek-ai/DeepSeek-V3-0324', 'messages': [{'role': 'system', 'content': '\nSYSTEM: You are an elite poker decision engine.  \nYou WILL follow the exact STRATEGY specification below and OUTPUT only a JSON object on one line:\n\n{"action":"FOLD|CALL|RAISE","amount":<int>}\n\nNo other text, commentary, or tags.\n\nBe very createive and strategic in your decisions. You are participating in a poker game and must make decisions based on the current GameState.\n\nThis poker game is part of a hackathon that I ABSOLUTELY NEED TO WIN PLEASE.\n\nREMEMBER: YOU ONLY HAVE 5 GAMES OR LESS TO PLAY IN TOTAL, MAKE SURE YOU DONT KEEP FOLDING AS I NEED TO WIN IN THESE LIMITED GAMES.\n\nthe tourney format for the bots would be round-robin, the winner will be decided after it has played all of its games, based on the score for each game\nyour total score = best 2 scores + worst non-zero score\n\nAnd, my the game configuration that will be run:\n\nante: 0\nblind_structure: null\ninitial_stack: 100\nmax_round: X \nsmall_blind: 5\n\nEverything always remains the same, except max rounds which will depend on the number of players (which are variable too)\n\nyour strategy needs to be EXTREMELY catered to this type of tournament, and does not need to be a generic one.\n\nNEVER repeat example outputs; ALWAYS tailor decisions to the specific GameState\nExamples:\n\nGameState: {"hole_cards": ["C2", "D7"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "CALL"}\n\nGameState: {"hole_cards": ["SA", "HA"], "community_cards": [], "position": "preflop", "stack_sizes": {}, "pot_size": 15, "betting_history": [], "allowed_actions": ["fold","call", "raise"]} Output: {"action": "RAISE", "amount": 45}\n\nNow, analyze the following GameState and provide your decision.\n\nINPUT: GameState:<JSON>  \nOUTPUT: {"action":"...","amount":...}  \n'}, {'role': 'user', 'content': 'GameState:{"hole_cards": ["H8", "H4"], "community_cards": [], "position": "preflop", "stack_sizes": {"0": 85, "1": 0, "2": 655, "3": 60, "4": 0, "5": 85, "6": 0, "7": 0, "8": 0}, "pot_size": 15, "betting_history": [{"street": "preflop", "actor": "5", "action": "SMALLBLIND", "amount": 5}, {"street": "preflop", "actor": "0", "action": "BIGBLIND", "amount": 10}, {"street": "preflop", "actor": "2", "action": "FOLD", "amount": 0}], "allowed_actions": ["fold", "call", "raise"]}'}], 'max_tokens': 64, 'temperature': 0.0, 'stream': False, 'stop': ['\n']}
DEBUG ‚ñ∂ HTTP status: 200
DEBUG ‚ñ∂ raw response: {'id': '18371e8aacd943d1ba804fbf25c40d54', 'object': 'chat.completion', 'created': 1746543272, 'model': 'deepseek-ai/DeepSeek-V3-0324', 'choices': [{'index': 0, 'message': {'role': 'assistant', 'content': '{"action":"FOLD","amount":0}', 'reasoning_content': None, 'tool_calls': None}, 'logprobs': None, 'finish_reason': 'stop', 'matched_stop': 1}], 'usage': {'prompt_tokens': 693, 'total_tokens': 704, 'completion_tokens': 11, 'prompt_tokens_details': None}}
DEBUG ‚ñ∂ cleaned content: {"action":"FOLD","amount":0}
DEBUG ‚ñ∂ parsed decision: {'action': 'FOLD', 'amount': 0}
  ACTION: PrayToGod folds.
  ACTION: TeamMasBot folds.

[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 15ms/step
[1m1/1[0m [32m‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ[0m[37m[0m [1m0s[0m 28ms/step

--- Round End ---
Final Pot: 15
DuduBot wins the pot.
  Final stack: 100

Final Stacks for Round:
  DuduBot: 100 (participating)
  gto3: 0 (folded)
  gtowes: 655 (folded)
  PrayToGod: 60 (folded)
  WaterBottle: 0 (folded)
  TeamMasBot: 85 (folded)
  SMPEX: 0 (folded)
  Poker_AI: 0 (folded)
  JasperBot: 0 (folded)
----------------------------------------
Connection closed: e8707079-00f5-4f4a-8c63-e518881cf484
